import pydasm

def disassemble_file(file_path):
    """
    Disassembles a binary file and prints the disassembled instructions.

    :param file_path: The path to the binary file to disassemble.
    """
    try:
        with open(file_path, "rb") as file:
            data = file.read()

        offset = 0
        while offset < len(data):
            # Attempt to disassemble an instruction from the binary data
            instruction = pydasm.get_instruction(data[offset:], pydasm.MODE_32)
            if not instruction:
                break

            # Extract disassembled instruction details
            instruction_hex = ' '.join(['%02X' % byte for byte in instruction.bytes])
            instruction_mnemonic = pydasm.get_mnemonic(instruction, pydasm.FORMAT_INTEL)
            instruction_operands = pydasm.get_operands(instruction, pydasm.FORMAT_INTEL)

            # Print the disassembled instruction
            print(f"0x{offset:08X}: {instruction_hex.ljust(24)} {instruction_mnemonic} {instruction_operands}")

            offset += instruction.length

    except Exception as e:
        print(f"An error occurred: {str(e)}")

if __name__ == "__main__":
    file_path = "path_to_your_binary_file.exe"  # Replace with the actual binary file path
    disassemble_file(file_path)
