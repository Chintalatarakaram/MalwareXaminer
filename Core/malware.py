import hashlib

def calculate_hash(file_path, hash_algorithm="sha256"):
    """
    Calculate the hash of a file using the specified hash algorithm.

    :param file_path: The path to the file.
    :param hash_algorithm: The hash algorithm to use (default is "sha256").
    :return: The calculated hash.
    """
    try:
        with open(file_path, "rb") as file:
            data = file.read()
            hash_obj = hashlib.new(hash_algorithm)
            hash_obj.update(data)
            file_hash = hash_obj.hexdigest()
            return file_hash

    except Exception as e:
        print(f"An error occurred: {str(e)}")
        return None

def analyze_malware(file_path):
    """
    Perform a basic analysis of a file, including calculating its hash.

    :param file_path: The path to the file.
    """
    file_hash = calculate_hash(file_path)
    if file_hash:
        print(f"File Hash: {file_hash}")
        print("Malware analysis completed.")

if __name__ == "__main__":
    binary_path = "path_to_binary_file.exe"  # Replace with the path to the binary file for analysis
    analyze_malware(binary_path)
