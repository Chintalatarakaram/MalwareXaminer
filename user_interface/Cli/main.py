import argparse
from disassembler import disassemble_file
from signature import detect_signature
from sandbox import run_in_sandbox
from behavior import monitor_behavior
from report import generate_report

def main():
    parser = argparse.ArgumentParser(description="Malware Analysis Tool - CLI")

    # Define command-line arguments
    parser.add_argument("file_path", help="Path to the binary file for analysis")

    parser.add_argument("--disassemble", action="store_true", help="Perform disassembly")
    parser.add_argument("--detect-signature", action="store_true", help="Detect known signatures")
    parser.add_argument("--sandbox", action="store_true", help="Run in a sandbox")
    parser.add_argument("--monitor-behavior", action="store_true", help="Monitor behavior")
    parser.add_argument("--generate-report", action="store_true", help="Generate analysis report")

    args = parser.parse_args()

    # Perform the selected analysis tasks
    if args.disassemble:
        disassemble_file(args.file_path)

    if args.detect_signature:
        detect_signature(args.file_path)

    if args.sandbox:
        run_in_sandbox(args.file_path)

    if args.monitor_behavior:
        monitor_behavior(args.file_path)

    if args.generate_report:
        generate_report(args.file_path)

if __name__ == "__main__":
    main()
