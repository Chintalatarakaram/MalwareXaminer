from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler

class FileChangeHandler(FileSystemEventHandler):
    def on_created(self, event):
        if event.is_directory:
            return
        print(f"File created: {event.src_path}")

    def on_deleted(self, event):
        if event.is_directory:
            return
        print(f"File deleted: {event.src_path}")

    def on_modified(self, event):
        if event.is_directory:
            return
        print(f"File modified: {event.src_path}")

def monitor_file_changes(directory_path):
    event_handler = FileChangeHandler()
    observer = Observer()
    observer.schedule(event_handler, path=directory_path, recursive=False)
    observer.start()

    try:
        print(f"Monitoring directory for file changes: {directory_path}")
        observer.join()
    except KeyboardInterrupt:
        observer.stop()
    observer.join()

if __name__ == "__main__":
    directory_path = "/path/to/monitor"  # Replace with the directory you want to monitor
    monitor_file_changes(directory_path)
